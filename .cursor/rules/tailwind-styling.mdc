# Tailwind CSS 样式规范

## 基本原则

1. **使用 Tailwind 类名**，避免自定义 CSS
2. **使用 cn() 函数**合并类名
3. **使用 CSS 变量**定义颜色主题
4. **响应式设计**优先移动端

## 类名组织

```typescript
// 使用 cn() 函数合并类名
import { cn } from '@/lib/utils';

const buttonClasses = cn(
  // 基础样式
  'inline-flex items-center justify-center',
  // 状态样式
  'hover:bg-primary/90 focus:ring-2',
  // 条件样式
  variant === 'destructive' && 'bg-destructive text-white',
  // 传入的自定义类名
  className
);
```

## 颜色使用

使用 CSS 变量定义的颜色：

```typescript
// 主要颜色
'bg-primary text-primary-foreground'
'bg-secondary text-secondary-foreground'
'bg-destructive text-destructive-foreground'

// 语义化颜色
'bg-background text-foreground'
'bg-card text-card-foreground'
'bg-muted text-muted-foreground'
```

## 响应式设计

```typescript
// 移动端优先
'w-full md:w-auto'
'flex-col md:flex-row'
'p-4 md:p-6 lg:p-8'

// 断点：sm(640px), md(768px), lg(1024px), xl(1280px), 2xl(1536px)
```

## 组件样式模式

```typescript
// 使用 cva 创建变体样式
import { cva } from 'class-variance-authority';

const buttonVariants = cva(
  'inline-flex items-center justify-center', // 基础样式
  {
    variants: {
      variant: {
        default: 'bg-primary text-primary-foreground',
        destructive: 'bg-destructive text-white'
      },
      size: {
        sm: 'h-8 px-3',
        md: 'h-10 px-4',
        lg: 'h-12 px-6'
      }
    },
    defaultVariants: {
      variant: 'default',
      size: 'md'
    }
  }
);
```

## 动画和过渡

```typescript
// 使用 Tailwind 内置动画
'transition-all duration-200'
'hover:scale-105 active:scale-95'
'animate-pulse animate-spin animate-bounce'

// 使用 tailwindcss-animate 插件
'animate-accordion-down animate-accordion-up'
```

## 间距和布局

```typescript
// 使用一致的间距
'space-y-4 space-x-2'  // 子元素间距
'gap-4 gap-x-2 gap-y-4'  // Grid/Flex 间距
'p-4 px-6 py-2'  // 内边距
'm-4 mx-auto my-8'  // 外边距
```
